{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAmCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAOC,SAXU,SAACC,GAElBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBS,SAACP,GAClBF,EAAcE,EAAMQ,OAAOF,a,+BCYpBG,EAnBK,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,+FAGbC,EAHa,iDAGoCC,UAAUH,GAH9C,0EAKCI,MAAMF,GALP,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YACrB,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAZvB,kBAgBZL,GAhBY,4CAAH,sDCYLQ,EAVK,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEzB,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAML,EAAKM,IAAKP,IACrB,4BAAIA,QC0BDQ,EA7BC,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAQd,ECVwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAPAC,qBAAW,WACPzB,EAAQC,GACPyB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBhB,KAAKmB,EACLL,SAAQ,SACb,CAAErB,IAEEsB,EDHwBK,CAAa3B,GAAhCc,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDjB,IACjDqB,GAAW,mBAAGJ,UAAU,kCAAb,yBACb,qBAAKA,UAAU,YAAf,SAGMH,EAAOL,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEmBlBiB,EAvCO,WAQlB,MAAoC1C,mBAAS,CACrC,eADR,mBAAOQ,EAAP,KAAmBT,EAAnB,KAYA,OACI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BACMS,EAAWe,KAAI,SAACT,GAAD,OAEb,aADA,CACC,EAAD,CAASA,SAAUA,GAAeA,YC9BlD6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3bff1571.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('')\n\n    const handleChange = (event) => {\n        setInputValue(event.target.value)\n    }\n\n    const handleSubmit = (event) => \n    {\n        event.preventDefault();\n        if(inputValue.trim().length > 0)\n        {\n            setCategories(categories => [inputValue,...categories])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form  onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async(category) => {\n\n    const API_KEY= `BqIirqpT0hHwBligyz76XSMENeH8khob`\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${API_KEY}`\n\n    const resp = await (fetch(URL))\n    const {data} = await resp.json()\n\n    const gifs = data.map(img => (\n        {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    ) )\n\n    return gifs;\n}\n\nexport default getGifs;","import React from 'react'\n\nconst GifGridItem = ({title, url}) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src ={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGifs } from '../helpers/getGifs'\nimport GifGridItem from './GifGridItem'\nconst GifGrid = ({category}) => {\n\n    // const [images, setImages] = useState([])\n\n    // useEffect( () => {\n    //     getGifs(category)\n    //     .then(imgs => setImages(imgs))\n    // }, [ category ])\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n            { loading && <p className='animate__animated animate_flash'>Cargando...</p> }\n            <div className='card-grid'>\n                \n\n                { images.map( (img) => \n                    <GifGridItem \n                        key={img.id}\n                        {...img}\n                    />\n                )}\n\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport getGifs from '../helpers/getGifs'\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n        getGifs(category)\n        .then(imgs => setState({\n            data:imgs,\n            loading:false}))\n    }, [ category ])\n\n    return state;\n}\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\nconst GiftExpertApp = () => {\n\n    // const categories = [\n    //     'One Punch',\n    //     'Samurai X',\n    //     'Dragon Ball'\n    // ];\n\n    const [categories, setCategories] = useState([\n            'Code Geass',\n\n    ])\n\n\n    // const handleAdd = () => \n    // {\n    //     // setCategories([...categories, 'Hunter X Hunter' ])\n    //     setCategories(cats => [...cats, 'Hunter X Hunter'])\n    // }\n\n    return (\n        <>\n        <h2>GiftExpertApp</h2>\n        <AddCategory setCategories={setCategories} />\n        <hr />\n\n        {/* <button onClick={handleAdd}>Agregar</button> */}\n\n        <ol>\n            { categories.map((category) => \n                // <li key={category}>{category}</li>\n                <GifGrid category={category} key={category}/> \n            )}\n        </ol>\n        \n        </>\n    )\n}\n\nexport default GiftExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp'\nReactDOM.render(\n  <React.StrictMode>\n    <GiftExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}